1

SublimeTextのショートカットで覚えたい〜〜〜〜

CTRL＋L

カーソルのある行を選択状態にします。

上に移動: CTRL＋SHIFT＋↑

下に移動: CTRL＋SHIFT＋↓

上にに改行を追加CTRL＋SHIFT＋ENTER

下に改行を追加CTRL＋ENTER

選択している単語と同じ単語を選択していくCTRL＋D

コピペを一気に行うCTRL＋SHIFT＋D

次の文字に移動: F3

前の文字に移動: SHIFT＋F3
検索文字を一つずつ選択していくCTRL＋Dでもいいけど、選択したいわけじゃなくてどこにあるのかを確認したい！なんて時はこちら






2

ユーザ登録画面の変更時のflash機能実装する際の学び〜〜〜

コントローラ画面でredirecto_toを使う場合
redirect_to パス名, notice: "エラーメッセージ"

コントローラ画面でrenderと共に使う場合

flash.now[:alert] = "エラーメッセージ"
render :アクション名

気付き
<% if flash.now[:notice] %>
  <p><%= flash[:notice] %></p>
  <% end %>

  とviewに書く際に％＝を記入し忘れていたのでエラーメッセージが表示されなかった







3
バリデーションエラーを表示させたい！！！！〜〜〜〜〜
まずmodelにバリデーション
message.rb

class Message < ApplicationRecord
  belongs_to :user
  validates :title, presence: true, length: { maximum: 50 }
  validates :content, presence: true, length: { maximum: 140 }
end

titleカラムと。contentカラムは空白では登録できんぞ！ってこと。


エラーメッセージのファイルの作成~~~~~~~~~~
layouts/_error_messages.html.erb


  <!-- エラーメッセージを表示させる -->
<% if @book.errors.any? %>
  <div class="alert alert-warning">
    <h2><%= @book.errors.count %>errors prohibited this obj from being saved:</h2>
    <ul>
      <% @book.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
    </ul>
  </div>
<% end %>
<!-- エラーメッセージここまで -->

errors.full_messagesは
全てのエラーメッセージを配列で取得します。
複数のメッセージが格納されていることもあるので、全て表示するには each でループで回しましょう。
@bookの部分をモデル名にする。＠のつけ忘れ、コントローラの記述漏れ


def update
  	@user = User.find(params[:id])
	  	if @user.update(user_params)
	  		redirect_to user_path(@user.id), notice: 'You have updated user successfully.'
	  	else redirect_to edit_user_path  ※ここがだめだった
	  	end
  	end

	else redirect_to edit_user_pathを
	※else render :editに変更したらエラーメッセージがやっと表示された。
	renderとredirectの違いが分からないから調べること
