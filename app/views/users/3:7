1

アプリ2制作のテーブルデザインはbootstrapを入れてから
テーブルたぐの後ろのクラス名を変更する。
	<table class="table table-condensed">
こうしたら自動的にレイアウトを整えてくれる




2

tableタグについて
<table>..........テーブル全体をこれでかこむ

<tr>..........行を囲む
<th>場所</th>..........タイトルを囲む/
<th>課題名</th>
<th>グレード</th>
</tr>........../行を囲む


<tr>
<td>宮川</td>........../データを囲む
<td>アメゴ</td>
<td>初段</td>
</tr>


<tr>
<td>御手洗</td>
<td>ターターシン</td>
<td>初段</td>
</tr>

</table>........../テーブル全体をこれでかこむ




3
ルーティングは上から読み込まれるため、：id/にはなんでも入るから順番を考える
resourcesはうまいことルーティングを作成してくれる。
けど、基本的なアクション分しか作成できないので、ページの量が増えたときに気をつけること。




4
ユーザの投稿したブックの一覧ページがどうしても作れない。
モデルに紐づいている情報を取り出す記述をuserコントローラーのshowアクションに書く必要があった。
ユーザーテーブルの一件の情報を、複数のブックスと紐づけるこれでユーザー別の投稿一覧表が@user_booksに入った。
最後のブックスはhas_manyのところにある文字のこと。一件のユーザーと複数のブックスなので複数形とする。
ユーザーコントローラーのshowアクションにこう記述
@user_books = User.find(params[:id]).books





5
Bookのshow画面にユーザーネームを表示させたい。
bookコントローラーのshowにこう記述
		@user = Book.find(params[:id]).user
bookビューのshowにこう記述
		<%= @user.name %>
これでブックのところでユーザーテーブルのnameカラムを表示させることができた。






6
ログインした後、マイページに遷移して欲しい場合、
controller/application.controllerの中に記述
before_action :authenticate_user!の一文の下に書きました。
これをしてみたらエラー。
	def after_sign_in_path_for(resource)
    	user_path
  	end
これは一覧ページなどの決まったルーとパスに飛ばすもの。
マイページはURLに番号が振られていて各人によって違うのでこれでは無理だった。
ログイン後に遷移するpathを設定

こうしたら簡単にできた。
user_path＃showに飛ばしたいときURL部分に各ページの数字が入る。

	def after_sign_in_path_for(resource) 
   		 user_url(resource)
   	end










